name: Deploy Schemas to Confluent Schema Registry

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-schemas:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate schemas
        run: |
          SCHEMA_DIR="schemas"
          find "$SCHEMA_DIR" -name '*.avsc' | while read schema_file; do
            if ! jq empty "$schema_file" &>/dev/null; then
              echo "‚ùå Invalid JSON in $schema_file"
              exit 1
            fi
          done

      - name: Deploy schemas
        env:
          SCHEMA_REGISTRY_URL: ${{ secrets.SCHEMA_REGISTRY_URL }}
          API_KEY: ${{ secrets.SCHEMA_REGISTRY_API_KEY }}
          API_SECRET: ${{ secrets.SCHEMA_REGISTRY_API_SECRET }}
        run: |
          #!/bin/bash
          set -eo pipefail
          SCHEMA_DIR="schemas"
          FAILED=0

          echo "Validating API key permissions..."
          if ! curl -sS -u "${API_KEY}:${API_SECRET}" \
            "${SCHEMA_REGISTRY_URL}/mode" >/dev/null; then
            echo "‚ùå FATAL: API key authentication failed or lacks basic permissions"
            exit 1
          fi

          find "$SCHEMA_DIR" -name '*.avsc' | while read -r schema_file; do
            subject_name=$(basename "$schema_file" .avsc)
            echo "üöÄ Deploying schema: $subject_name"

            # Create properly formatted payload
            payload=$(jq -n --arg schema "$(cat "$schema_file" | jq -c .)" \
              '{schema: $schema, schemaType: "AVRO"}')

            # Capture full response
            response=$(curl -sS -w "\n%{http_code}" \
              -u "${API_KEY}:${API_SECRET}" \
              -H "Content-Type: application/vnd.schemaregistry.v1+json" \
              -X POST \
              --data "$payload" \
              "${SCHEMA_REGISTRY_URL}/subjects/${subject_name}/versions" 2>&1) || true

            http_code=$(echo "$response" | tail -n1)
            response_body=$(echo "$response" | head -n -1)

            case $http_code in
              200|201|202)
                echo "‚úÖ Success! New schema version: $(echo "$response_body" | jq .id)"
                ;;
              401|403)
                echo "‚ùå PERMISSION DENIED: $response_body"
                echo "   Required permission: 'Write' on subject: $subject_name"
                echo "   Manage permissions at: https://confluent.cloud/schema-registry/subjects/$subject_name/permissions"
                FAILED=1
                ;;
              409)
                echo "‚ö†Ô∏è  Schema already exists: $subject_name (compatible)"
                ;;
              422)
                echo "‚ùå Schema compatibility failed: $subject_name"
                echo "$response_body"
                FAILED=1
                ;;
              *)
                echo "‚ùå Unexpected error ($http_code): $response_body"
                FAILED=1
                ;;
            esac
          done

          if [ $FAILED -ne 0 ]; then
            echo "Some schemas failed to deploy. Check logs for details."
            exit 1
          fi
